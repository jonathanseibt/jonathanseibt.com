{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "react",
    "@typescript-eslint",
    "simple-import-sort",
    "eslint-plugin-import",
    "unicorn",
    "folders"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "rules": {
    "sort-imports": "off",
    "@typescript-eslint/no-namespace": "off",
    "no-implicit-coercion": "error",
    "react/self-closing-comp": "error",
    "react/jsx-curly-brace-presence": "error",
    "no-useless-rename": "error",
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "eol-last": "error",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "quotes": [
      "error",
      "double",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": false
      }
    ],
    "no-console": [
      "warn",
      {
        "allow": [
          "error"
        ]
      }
    ],
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          "./*",
          "../*",
          "src/components/*",
          "src/core/*"
        ]
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ImportDeclaration[source.value='react'] > ImportSpecifier[imported.name='FC']",
        "message": "Don't use 'FC' as a type. Use explicit types for props and return. You must manually create a custom interface for props and use 'ReactNode' for the return."
      },
      {
        "selector": "ImportDeclaration[source.value='react'] > ImportDefaultSpecifier[local.name='React']",
        "message": "Starting from React 17, it is not necessary to import 'React' anymore."
      },
      {
        "selector": "TSQualifiedName[left.name='React']",
        "message": "Import directly from 'react' instead."
      }
    ],
    "folders/match-regex": [
      "error",
      "(\\[.*\\])|(^[a-z0-9]+(-[a-z0-9]+)*$)",
      "jonathanseibt.com"
    ],
    "unicorn/filename-case": [
      "error",
      {
        "case": "kebabCase"
      }
    ],
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "EmotionJSX.Element": "Use `JSX.Element` instead.",
          "ReactElement": "Use `ReactNode` instead."
        }
      }
    ],
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": false,
        "allowTypedFunctionExpressions": false,
        "allowHigherOrderFunctions": false,
        "allowDirectConstAssertionInArrowFunctions": false,
        "allowConciseArrowFunctionExpressionsStartingWithVoid": false
      }
    ],
    "object-shorthand": [
      "error",
      "always",
      {
        "avoidQuotes": true
      }
    ],
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "@typescript-eslint/consistent-type-definitions": [
      "error",
      "interface"
    ],
    "curly": "error"
  },
  "overrides": [
    {
      "files": "index.ts",
      "rules": {
        "no-restricted-imports": "off"
      }
    }
  ]
}
